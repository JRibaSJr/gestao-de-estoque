version: "3.9"

services:
  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:latest
    command: >-
      redpanda start --overprovisioned --smp 1 --memory 512M --reserve-memory 0M
      --node-id 0 --check=false
      --kafka-addr 0.0.0.0:9092 --advertise-kafka-addr redpanda:9092
      --set redpanda.auto_create_topics_enabled=true
    ports:
      - "9092:9092"
      - "9644:9644"
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster info || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  backend-dev:
    image: maven:3.9-eclipse-temurin-17
    working_dir: /workspace/backend
    command: mvn -DskipTests spring-boot:run
    ports:
      - "8001:8001"
    volumes:
      - ./backend:/workspace/backend
      - ~/.m2:/root/.m2
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=redpanda:9092
    depends_on:
      redpanda:
        condition: service_healthy
      redis:
        condition: service_healthy

  api-gateway-dev:
    image: maven:3.9-eclipse-temurin-17
    working_dir: /workspace/api-gateway
    command: mvn -DskipTests spring-boot:run
    ports:
      - "8080:8080"
    volumes:
      - ./api-gateway:/workspace/api-gateway
      - ~/.m2:/root/.m2
    depends_on:
      redis:
        condition: service_healthy

# Como usar:
# docker compose -f docker-compose.dev.yml up -d redpanda redis
# docker compose -f docker-compose.dev.yml up backend-dev api-gateway-dev